name: Build Docker Container and push to DO Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: ["master"]
  pull_request:
    branches: ["development"]

jobs:
  test_django_job:
    uses: JuanLadeira/kuber-django/.github/workflows/test_django.yaml@master
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./web
    steps:
      - name: Checkout codes
        uses: actions/checkout@v3
        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
    # Push the Docker image to Google Container Registry
      - name: Publishs
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
      - name: Migrate database command and collect static files command
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=${{env.DEPLOYMENT_NAME}} -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- sh /app/scripts/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- sh /app/scripts/collectstatic.sh
