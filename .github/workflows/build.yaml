name: Build Docker Container and push to DO Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: ["master"]
  pull_request:
    branches: ["development"]

jobs:
  test_django_job:
    uses: JuanLadeira/kuber-django/.github/workflows/test_django.yaml@master
  docker_build_job:
    runs-on: ubuntu-latest
    needs: [test_django_job]
    defaults:
      run:
        working-directory: ./web
    env:
      DOCKER_USER_NAME: felipe11922
      REPOSITORY_NAME: pub-repository
      HOST_NAME: registry-host:5000
      CONTAINER_NAME: django-k8s-web
      DEPLOYMENT_NAME: django-k8s-web-deployment
      ENV_SECRETS: django-k8s-web-prod-env
      CLUSTER_NAME: deploy-djblog

    steps:
      - name: Checkout codes
        uses: actions/checkout@v3
      - name: install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: "v1.26.0"
        id: install
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: build container image
        working-directory: ./web
        run: |
          docker build -f Dockerfile -t ${{env.DOCKER_USER_NAME}}/${{env.REPOSITORY_NAME}}:latest -t ${{env.DOCKER_USER_NAME}}/${{env.REPOSITORY_NAME}}:DJ${GITHUB_SHA::7} .
      - name: push image to container registry.
        run: docker push ${{env.DOCKER_USER_NAME}}/${{env.REPOSITORY_NAME}} --all-tags
      - name: Update Deployment secrets
        working-directory: ./web
        run: |
          cat << EOF >> env.prod
          ENV_ALLOWED_HOSTS=${{ secrets.ENV_ALLOWED_HOSTS }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUERPUSER_EMAIL=${{ secrets.DJANGO_SUERPUSER_EMAIL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          EOF
          kubectl delete secret dj-blog-k8s-web-prod-env
          kubectl create secret generic dj-blog-k8s-web-prod-env --from-env-file=env.prod
      - name: kubernets apply
        run: |
          export DOCKER_CONFIG=$(cat ~/.docker/config.json | base64 -w 0)
          sed -i'' -e 's/DOCKERHUB_USERNAME/${{ secrets.DOCKERHUB_USERNAME }}/g' -e 's/DOCKERHUB_REPOSITORY/${{ env.REPOSITORY_NAME }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' -e "s/DOCKER_CONFIG/$DOCKER_CONFIG/g" k8s.yaml
          kubectl apply -f k8s.yaml
      - name: Update Deployment image
        run: |
          kubectl set image deployment/${{env.DEPLOYMENT_NAME}} ${{env.CONTAINER_NAME}}=${{env.HOST_NAME}}/${{env.DOCKER_USER_NAME}}/${{env.REPOSITORY_NAME}}:DJ${GITHUB_SHA::7}
      - name: Wait for rollout to finish
        run: |
          kubectl rollout status deployment/${{env.DEPLOYMENT_NAME}}
      - name: Migrate database command and collect static files command
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=${{env.DEPLOYMENT_NAME}} -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- sh /app/scripts/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- sh /app/scripts/collectstatic.sh
